{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"CalendarStreak\",\n  data() {\n    return {\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n      columns: [[false, false, false, false, false, false, false], [false, false, false, false, false, false, false], [false, false, false, false, false, false, false], [false, false, false, false, false, false, false], [false, false, false, false, false, false, false]]\n    };\n  },\n  methods: {\n    async fetchStreakData() {\n      try {\n        const response = await axios.get('/api/dash/streak', {\n          params: {\n            month: 1\n          }\n        });\n        const focusTimeList = response.data.data.focusTimeList;\n        const updatedColumns = this.columns.map((column, colIndex) => column.map((day, rowIndex) => {\n          const dateString = new Date(2023, 6, colIndex * 7 + rowIndex + 1).toISOString().slice(5, 10);\n          const focusTimeEntry = focusTimeList.find(entry => entry.day === dateString);\n          return focusTimeEntry ? focusTimeEntry.focusTime > 0 : false;\n        }));\n        this.columns = updatedColumns;\n      } catch (error) {\n        console.error('Error fetching streak data:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchStreakData();\n  }\n};","map":{"version":3,"names":["axios","name","data","days","columns","methods","fetchStreakData","response","get","params","month","focusTimeList","updatedColumns","map","column","colIndex","day","rowIndex","dateString","Date","toISOString","slice","focusTimeEntry","find","entry","focusTime","error","console","mounted"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\MonthStreakColumn.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-streak\">\r\n    <div class=\"title\">월간 스트릭</div>\r\n    <div class=\"grid\">\r\n      <div class=\"days-column\">\r\n        <div class=\"day-label\" v-for=\"(day, index) in days\" :key=\"index\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"streak-columns\">\r\n        <div v-for=\"(column, colIndex) in columns\" :key=\"colIndex\" class=\"column\">\r\n          <div\r\n            v-for=\"(active, rowIndex) in column\"\r\n            :key=\"rowIndex\"\r\n            :class=\"['day', { active }]\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"CalendarStreak\",\r\n  data() {\r\n    return {\r\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n      columns: [\r\n        [false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false],\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchStreakData() {\r\n      try {\r\n        const response = await axios.get('/api/dash/streak', {\r\n          params: { month: 1 }\r\n        });\r\n        const focusTimeList = response.data.data.focusTimeList;\r\n\r\n        const updatedColumns = this.columns.map((column, colIndex) =>\r\n          column.map((day, rowIndex) => {\r\n            const dateString = new Date(2023, 6, colIndex * 7 + rowIndex + 1)\r\n              .toISOString()\r\n              .slice(5, 10);\r\n            const focusTimeEntry = focusTimeList.find(\r\n              (entry) => entry.day === dateString\r\n            );\r\n            return focusTimeEntry ? focusTimeEntry.focusTime > 0 : false;\r\n          })\r\n        );\r\n\r\n        this.columns = updatedColumns;\r\n      } catch (error) {\r\n        console.error('Error fetching streak data:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchStreakData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-streak {\r\n  width: 161px;\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.title {\r\n  font-size: 16px;\r\n  color: #a0a0a0;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.grid {\r\n  display: flex;\r\n}\r\n\r\n.days-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n}\r\n\r\n.day-label {\r\n  font-size: 14px;\r\n  color: #4a4a4a;\r\n  width: 20px;\r\n  height: 20px;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.streak-columns {\r\n  display: flex;\r\n}\r\n\r\n.column {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 5px;\r\n}\r\n\r\n.day {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 2px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.day.active {\r\n  background-color: #5865f2;\r\n}\r\n</style>"],"mappings":"AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACzCC,OAAO,EAAE,CACP,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACjD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACjD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACjD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACjD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAErD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,kBAAkB,EAAE;UACnDC,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAE;QACrB,CAAC,CAAC;QACF,MAAMC,aAAY,GAAIJ,QAAQ,CAACL,IAAI,CAACA,IAAI,CAACS,aAAa;QAEtD,MAAMC,cAAa,GAAI,IAAI,CAACR,OAAO,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,QAAQ,KACvDD,MAAM,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,KAAK;UAC5B,MAAMC,UAAS,GAAI,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEJ,QAAO,GAAI,IAAIE,QAAO,GAAI,CAAC,EAC7DG,WAAW,CAAC,EACZC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UACf,MAAMC,cAAa,GAAIX,aAAa,CAACY,IAAI,CACtCC,KAAK,IAAKA,KAAK,CAACR,GAAE,KAAME,UAC3B,CAAC;UACD,OAAOI,cAAa,GAAIA,cAAc,CAACG,SAAQ,GAAI,IAAI,KAAK;QAC9D,CAAC,CACH,CAAC;QAED,IAAI,CAACrB,OAAM,GAAIQ,cAAc;MAC/B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}