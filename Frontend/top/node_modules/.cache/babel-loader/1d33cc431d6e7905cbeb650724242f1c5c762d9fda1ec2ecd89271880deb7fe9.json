{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      time: 0,\n      timer: null,\n      category: \"\",\n      warningMessage: \"\"\n    };\n  },\n  computed: {\n    formattedTime() {\n      const hours = String(Math.floor(this.time / 3600)).padStart(2, \"0\");\n      const minutes = String(Math.floor(this.time % 3600 / 60)).padStart(2, \"0\");\n      const seconds = String(this.time % 60).padStart(2, \"0\");\n      return `${hours}:${minutes}:${seconds}`;\n    }\n  },\n  methods: {\n    startTimer() {\n      if (!this.category) {\n        this.warningMessage = \"카테고리를 입력해주세요\";\n        return;\n      }\n      this.warningMessage = \"\";\n      if (this.timer === null) {\n        this.timer = setInterval(() => {\n          this.time++;\n        }, 1000);\n      }\n    },\n    stopTimer() {\n      clearInterval(this.timer);\n      this.timer = null;\n    },\n    async saveTime() {\n      if (!this.category) {\n        this.warningMessage = \"카테고리를 입력해주세요\";\n        return;\n      }\n      try {\n        await axios.post(\"임시 url\", {\n          category: this.category,\n          time: this.time\n        });\n        this.warningMessage = \"집중 시간이 저장되었습니다.\";\n        this.resetTimer();\n      } catch (error) {\n        this.warningMessage = \"집중 시간 저장에 실패했습니다. 다시 시도해주세요.\";\n      }\n    },\n    resetTimer() {\n      this.stopTimer();\n      this.time = 0;\n      this.category = \"\";\n      this.warningMessage = \"\";\n    }\n  },\n  beforeUnmount() {\n    this.stopTimer();\n  }\n};","map":{"version":3,"names":["axios","data","time","timer","category","warningMessage","computed","formattedTime","hours","String","Math","floor","padStart","minutes","seconds","methods","startTimer","setInterval","stopTimer","clearInterval","saveTime","post","resetTimer","error","beforeUnmount"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\TimeCheck.vue"],"sourcesContent":["<template>\r\n  <div class=\"timer\">\r\n    <div class=\"timer-header\">\r\n      <h2>Timer</h2>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"category\"\r\n        placeholder=\"카테고리를 입력해주세요\"\r\n      />\r\n    </div>\r\n    <p v-if=\"warningMessage\" class=\"warning\">{{ warningMessage }}</p>\r\n    <p>{{ formattedTime }}</p>\r\n    <button @click=\"startTimer\">집중 시작</button>\r\n    <button @click=\"stopTimer\">일시 정지</button>\r\n    <button @click=\"saveTime\">시간 저장</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      time: 0,\r\n      timer: null,\r\n      category: \"\",\r\n      warningMessage: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    formattedTime() {\r\n      const hours = String(Math.floor(this.time / 3600)).padStart(2, \"0\");\r\n      const minutes = String(Math.floor((this.time % 3600) / 60)).padStart(\r\n        2,\r\n        \"0\"\r\n      );\r\n      const seconds = String(this.time % 60).padStart(2, \"0\");\r\n      return `${hours}:${minutes}:${seconds}`;\r\n    },\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      if (!this.category) {\r\n        this.warningMessage = \"카테고리를 입력해주세요\";\r\n        return;\r\n      }\r\n      this.warningMessage = \"\";\r\n      if (this.timer === null) {\r\n        this.timer = setInterval(() => {\r\n          this.time++;\r\n        }, 1000);\r\n      }\r\n    },\r\n    stopTimer() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    async saveTime() {\r\n      if (!this.category) {\r\n        this.warningMessage = \"카테고리를 입력해주세요\";\r\n        return;\r\n      }\r\n      try {\r\n        await axios.post(\"임시 url\", {\r\n          category: this.category,\r\n          time: this.time,\r\n        });\r\n        this.warningMessage = \"집중 시간이 저장되었습니다.\";\r\n        this.resetTimer();\r\n      } catch (error) {\r\n        this.warningMessage =\r\n          \"집중 시간 저장에 실패했습니다. 다시 시도해주세요.\";\r\n      }\r\n    },\r\n    resetTimer() {\r\n      this.stopTimer();\r\n      this.time = 0;\r\n      this.category = \"\";\r\n      this.warningMessage = \"\";\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    this.stopTimer();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.timer {\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 3.5px 5.5px #00000005;\r\n  text-align: center;\r\n  margin-top: 0px;\r\n  font-family: Arial, sans-serif;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.timer-header {\r\n  display: flex;\r\n  align-items: center;\r\n  /* justify-content: center; */\r\n}\r\n\r\n.timer-header h2 {\r\n  color: #b0bec5;\r\n  font-weight: 700;\r\n  margin-right: 10px; /* 여백 추가 */\r\n}\r\n\r\n.timer input {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  width: 200px;\r\n  text-align: center;\r\n}\r\n\r\n.timer input::placeholder {\r\n  color: transparent; /* 기본적으로 플레이스홀더를 투명하게 설정 */\r\n}\r\n\r\n.timer input:focus::placeholder {\r\n  color: transparent; /* 포커스가 있을 때 플레이스홀더를 투명하게 유지 */\r\n}\r\n\r\n.timer input:not(:focus)::placeholder {\r\n  color: #aaa; /* 포커스가 없을 때 플레이스홀더를 회색으로 설정 */\r\n}\r\n\r\n.timer p {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  margin: 20px 0;\r\n}\r\n\r\n.timer button {\r\n  margin: 5px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f0f0f0;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.timer button:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.timer .warning {\r\n  color: red;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,MAAMC,KAAI,GAAIC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACT,IAAG,GAAI,IAAI,CAAC,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACnE,MAAMC,OAAM,GAAIJ,MAAM,CAACC,IAAI,CAACC,KAAK,CAAE,IAAI,CAACT,IAAG,GAAI,IAAI,GAAI,EAAE,CAAC,CAAC,CAACU,QAAQ,CAClE,CAAC,EACD,GACF,CAAC;MACD,MAAME,OAAM,GAAIL,MAAM,CAAC,IAAI,CAACP,IAAG,GAAI,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACvD,OAAO,GAAGJ,KAAK,IAAIK,OAAO,IAAIC,OAAO,EAAE;IACzC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE;QAClB,IAAI,CAACC,cAAa,GAAI,cAAc;QACpC;MACF;MACA,IAAI,CAACA,cAAa,GAAI,EAAE;MACxB,IAAI,IAAI,CAACF,KAAI,KAAM,IAAI,EAAE;QACvB,IAAI,CAACA,KAAI,GAAIc,WAAW,CAAC,MAAM;UAC7B,IAAI,CAACf,IAAI,EAAE;QACb,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACDgB,SAASA,CAAA,EAAG;MACVC,aAAa,CAAC,IAAI,CAAChB,KAAK,CAAC;MACzB,IAAI,CAACA,KAAI,GAAI,IAAI;IACnB,CAAC;IACD,MAAMiB,QAAQA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAAChB,QAAQ,EAAE;QAClB,IAAI,CAACC,cAAa,GAAI,cAAc;QACpC;MACF;MACA,IAAI;QACF,MAAML,KAAK,CAACqB,IAAI,CAAC,QAAQ,EAAE;UACzBjB,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBF,IAAI,EAAE,IAAI,CAACA;QACb,CAAC,CAAC;QACF,IAAI,CAACG,cAAa,GAAI,iBAAiB;QACvC,IAAI,CAACiB,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAAClB,cAAa,GAChB,8BAA8B;MAClC;IACF,CAAC;IACDiB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,SAAS,CAAC,CAAC;MAChB,IAAI,CAAChB,IAAG,GAAI,CAAC;MACb,IAAI,CAACE,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,cAAa,GAAI,EAAE;IAC1B;EACF,CAAC;EACDmB,aAAaA,CAAA,EAAG;IACd,IAAI,CAACN,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}