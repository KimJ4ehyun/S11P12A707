{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n      months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      years: this.generateYears(),\n      selectedYear: new Date().getFullYear(),\n      selectedMonth: new Date().getMonth(),\n      calendar: []\n    };\n  },\n  mounted() {\n    this.updateCalendar();\n  },\n  methods: {\n    generateYears() {\n      const currentYear = new Date().getFullYear();\n      return Array.from({\n        length: 10\n      }, (_, i) => currentYear - 5 + i);\n    },\n    updateCalendar() {\n      const year = this.selectedYear;\n      const month = this.selectedMonth;\n      const firstDayOfMonth = new Date(year, month, 1);\n      const lastDayOfMonth = new Date(year, month + 1, 0);\n      const firstDayIndex = firstDayOfMonth.getDay();\n      const lastDate = lastDayOfMonth.getDate();\n      const prevLastDay = new Date(year, month, 0).getDate();\n      const prevDays = firstDayIndex === 0 ? 6 : firstDayIndex - 1;\n      const nextDays = 42 - (prevDays + lastDate);\n      const daysArray = [];\n      for (let x = prevDays; x > 0; x--) {\n        daysArray.push({\n          date: prevLastDay - x + 1,\n          isCurrentMonth: false\n        });\n      }\n      for (let i = 1; i <= lastDate; i++) {\n        const isToday = new Date().toDateString() === new Date(year, month, i).toDateString();\n        daysArray.push({\n          date: i,\n          isCurrentMonth: true,\n          isToday\n        });\n      }\n      for (let j = 1; j <= nextDays; j++) {\n        daysArray.push({\n          date: j,\n          isCurrentMonth: false\n        });\n      }\n      this.calendar = [];\n      while (daysArray.length) {\n        this.calendar.push(daysArray.splice(0, 7));\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","days","months","years","generateYears","selectedYear","Date","getFullYear","selectedMonth","getMonth","calendar","mounted","updateCalendar","methods","currentYear","Array","from","length","_","i","year","month","firstDayOfMonth","lastDayOfMonth","firstDayIndex","getDay","lastDate","getDate","prevLastDay","prevDays","nextDays","daysArray","x","push","date","isCurrentMonth","isToday","toDateString","j","splice"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\CalendarCheck.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-container\">\r\n      <div class=\"title\">캘린더</div>\r\n      <div class=\"calendar-header\">\r\n      <select v-model=\"selectedMonth\" @change=\"updateCalendar\">\r\n          <option v-for=\"(month, index) in months\" :key=\"index\" :value=\"index\">{{ month }}</option>\r\n      </select>\r\n      <select v-model=\"selectedYear\" @change=\"updateCalendar\">\r\n          <option v-for=\"year in years\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n      </select>\r\n      </div>\r\n      <div class=\"calendar-grid\">\r\n      <div class=\"day-label\" v-for=\"day in days\" :key=\"day\">{{ day }}</div>\r\n      <div v-for=\"(week, weekIndex) in calendar\" :key=\"weekIndex\" class=\"week\">\r\n          <div\r\n          v-for=\"(day, dayIndex) in week\"\r\n          :key=\"dayIndex\"\r\n          :class=\"['day', { 'current-month': day.isCurrentMonth, 'today': day.isToday }]\"\r\n          >\r\n          {{ day.date }}\r\n          </div>\r\n      </div>\r\n      </div>\r\n  </div>\r\n  </template>\r\n\r\n  <script>\r\n  export default {\r\n  data() {\r\n      return {\r\n      days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n      months: [\r\n          \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n      ],\r\n      years: this.generateYears(),\r\n      selectedYear: new Date().getFullYear(),\r\n      selectedMonth: new Date().getMonth(),\r\n      calendar: [],\r\n      };\r\n  },\r\n  mounted() {\r\n      this.updateCalendar();\r\n  },\r\n  methods: {\r\n      generateYears() {\r\n      const currentYear = new Date().getFullYear();\r\n      return Array.from({ length: 10 }, (_, i) => currentYear - 5 + i);\r\n      },\r\n      updateCalendar() {\r\n      const year = this.selectedYear;\r\n      const month = this.selectedMonth;\r\n      const firstDayOfMonth = new Date(year, month, 1);\r\n      const lastDayOfMonth = new Date(year, month + 1, 0);\r\n      const firstDayIndex = firstDayOfMonth.getDay();\r\n      const lastDate = lastDayOfMonth.getDate();\r\n\r\n      const prevLastDay = new Date(year, month, 0).getDate();\r\n      const prevDays = firstDayIndex === 0 ? 6 : firstDayIndex - 1;\r\n      const nextDays = 42 - (prevDays + lastDate);\r\n\r\n      const daysArray = [];\r\n\r\n      for (let x = prevDays; x > 0; x--) {\r\n          daysArray.push({ date: prevLastDay - x + 1, isCurrentMonth: false });\r\n      }\r\n\r\n      for (let i = 1; i <= lastDate; i++) {\r\n          const isToday = new Date().toDateString() === new Date(year, month, i).toDateString();\r\n          daysArray.push({ date: i, isCurrentMonth: true, isToday });\r\n      }\r\n\r\n      for (let j = 1; j <= nextDays; j++) {\r\n          daysArray.push({ date: j, isCurrentMonth: false });\r\n      }\r\n\r\n      this.calendar = [];\r\n      while (daysArray.length) {\r\n          this.calendar.push(daysArray.splice(0, 7));\r\n      }\r\n      }\r\n  }\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  .calendar-container {\r\n  width: 483px;\r\n  height: 400px;\r\n  padding: 20px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  font-family: Arial, sans-serif;\r\n  text-align: center;\r\n  }\r\n\r\n  .title {\r\n  font-size: 16px;\r\n  color: #070707;\r\n  margin-bottom: 20px;\r\n  }\r\n\r\n  .calendar-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  }\r\n\r\n  .calendar-header select {\r\n  font-size: 16px;\r\n  border: none;\r\n  background: transparent;\r\n  color: #5865f2;\r\n  outline: none;\r\n  cursor: pointer;\r\n  }\r\n\r\n  .calendar-grid {\r\n  display: grid;\r\n  padding-left: 10px;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 10px;\r\n  }\r\n\r\n  .day-label {\r\n  font-size: 14px;\r\n  color: #4a4a4a;\r\n  margin-left: -20px;\r\n  }\r\n\r\n  .week {\r\n  display: contents;\r\n  }\r\n\r\n  .day {\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  background: #f5f5f5;\r\n  color: #4a4a4a;\r\n  }\r\n\r\n  .day.current-month {\r\n  background: #e0e0e0;\r\n  font-weight: bold;\r\n  }\r\n\r\n  .day.today {\r\n  background: #5865f2;\r\n  color: white;\r\n  }\r\n\r\n  .day.current-month.today {\r\n  background: #5865f2;\r\n  color: white;\r\n  }\r\n  </style>  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}