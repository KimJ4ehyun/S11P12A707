{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"CalendarStreak\",\n  data() {\n    return {\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n      weeks: Array(5).fill(Array(7).fill({\n        active: false\n      }))\n    };\n  },\n  methods: {\n    async fetchStreakData() {\n      try {\n        const response = await axios.get('https://i11a707.p.ssafy.io/api/dash/streak', {\n          params: {\n            month: 1\n          }\n        });\n        const focusTimeList = response.data.data.focusTimeList;\n        const updatedWeeks = this.weeks.map((week, weekIndex) => week.map((day, dayIndex) => {\n          const dateString = new Date(2023, 6, weekIndex * 7 + dayIndex + 1).toISOString().slice(5, 10);\n          const focusTimeEntry = focusTimeList.find(entry => entry.day === dateString);\n          return {\n            active: focusTimeEntry ? focusTimeEntry.focusTime > 0 : false\n          };\n        }));\n        this.weeks = updatedWeeks;\n      } catch (error) {\n        console.error('Error fetching streak data:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchStreakData();\n  }\n};","map":{"version":3,"names":["axios","name","data","days","weeks","Array","fill","active","methods","fetchStreakData","response","get","params","month","focusTimeList","updatedWeeks","map","week","weekIndex","day","dayIndex","dateString","Date","toISOString","slice","focusTimeEntry","find","entry","focusTime","error","console","mounted"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\MonthStreakRow.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-streak\">\r\n    <div class=\"title\">월간 스트릭</div>\r\n    <div class=\"grid\">\r\n      <div class=\"day-label\" v-for=\"(day, index) in days\" :key=\"index\">{{ day }}</div>\r\n      <div v-for=\"(week, weekIndex) in weeks\" :key=\"weekIndex\" class=\"week\">\r\n        <div\r\n          v-for=\"(day, dayIndex) in week\"\r\n          :key=\"dayIndex\"\r\n          :class=\"['day', { active: day.active }]\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"CalendarStreak\",\r\n  data() {\r\n    return {\r\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n      weeks: Array(5).fill(Array(7).fill({ active: false })),\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchStreakData() {\r\n      try {\r\n        const response = await axios.get('https://i11a707.p.ssafy.io/api/dash/streak', {\r\n          params: { month: 1 }\r\n        });\r\n        const focusTimeList = response.data.data.focusTimeList;\r\n\r\n        const updatedWeeks = this.weeks.map((week, weekIndex) => \r\n          week.map((day, dayIndex) => {\r\n            const dateString = new Date(2023, 6, weekIndex * 7 + dayIndex + 1)\r\n              .toISOString()\r\n              .slice(5, 10);\r\n            const focusTimeEntry = focusTimeList.find(\r\n              (entry) => entry.day === dateString\r\n            );\r\n            return { active: focusTimeEntry ? focusTimeEntry.focusTime > 0 : false };\r\n          })\r\n        );\r\n        this.weeks = updatedWeeks;\r\n      } catch (error) {\r\n        console.error('Error fetching streak data:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchStreakData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-streak {\r\n  width: 161px;\r\n  height: 200px;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 3.5px 5.5px #00000005;\r\n  font-family: Arial, sans-serif;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  color: #a0aec0;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n  padding-top: 20px;\r\n}\r\n\r\n.grid {\r\n  display: grid;\r\n  margin-top: 10px;\r\n  padding-left: 3px;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 2px;\r\n}\r\n\r\n.day-label {\r\n  font-size: 14px;\r\n  color: #4a4a4a;\r\n}\r\n\r\n.week {\r\n  display: contents;\r\n  gap: 5px;\r\n}\r\n\r\n.day {\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 2px;\r\n}\r\n\r\n.day.active {\r\n  background-color: #5865f2;\r\n}\r\n</style>"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACzCC,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;IACvD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,4CAA4C,EAAE;UAC7EC,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAE;QACrB,CAAC,CAAC;QACF,MAAMC,aAAY,GAAIJ,QAAQ,CAACR,IAAI,CAACA,IAAI,CAACY,aAAa;QAEtD,MAAMC,YAAW,GAAI,IAAI,CAACX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,SAAS,KAClDD,IAAI,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,KAAK;UAC1B,MAAMC,UAAS,GAAI,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEJ,SAAQ,GAAI,IAAIE,QAAO,GAAI,CAAC,EAC9DG,WAAW,CAAC,EACZC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UACf,MAAMC,cAAa,GAAIX,aAAa,CAACY,IAAI,CACtCC,KAAK,IAAKA,KAAK,CAACR,GAAE,KAAME,UAC3B,CAAC;UACD,OAAO;YAAEd,MAAM,EAAEkB,cAAa,GAAIA,cAAc,CAACG,SAAQ,GAAI,IAAI;UAAM,CAAC;QAC1E,CAAC,CACH,CAAC;QACD,IAAI,CAACxB,KAAI,GAAIW,YAAY;MAC3B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}