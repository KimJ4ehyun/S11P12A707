{"ast":null,"code":"import { createApp, onMounted, ref, nextTick } from \"vue\";\nimport { GridStack } from \"gridstack\";\nimport \"gridstack/dist/gridstack.min.css\";\nimport TodayFocus1 from \"./TodayFocus1.vue\";\nimport WeekFocus1 from \"./WeekFocus1.vue\";\nimport MonthFocus1 from \"./MonthFocus1.vue\";\nimport TodayFocus2 from \"./TodayFocus2.vue\";\nimport WeekFocus2 from \"./WeekFocus2.vue\";\nimport MonthFocus2 from \"./MonthFocus2.vue\";\nimport TodayFocus2WithoutID from \"./TodayFocus2WithoutID.vue\";\nimport WeekFocus2WithoutID from \"./WeekFocus2WithoutID.vue\";\nimport MonthFocus2WithoutID from \"./MonthFocus2WithoutID.vue\";\nimport TotalFocus2WithoutID from \"./TotalFocus2WithoutID.vue\";\nimport PercentileRank from \"./PercentileRank.vue\";\nimport TimeCheck from \"./TimeCheck.vue\";\nimport TodayAchievement1 from \"./TodayAchievement1.vue\";\nimport WeekAchievement1 from \"./WeekAchievement1.vue\";\nimport MonthAchievement1 from \"./MonthAchievement1.vue\";\nimport TodayAchievement2 from \"./TodayAchievement2.vue\";\nimport WeekAchievement2 from \"./WeekAchievement2.vue\";\nimport MonthAchievement2 from \"./MonthAchievement2.vue\";\nimport MonthStreakColumn from \"./MonthStreakColumn.vue\";\nimport MonthStreakRow from \"./MonthStreakRow.vue\";\nimport HalfYearStreak from \"./HalfYearStreak.vue\";\nimport CalendarCheck from \"./CalendarCheck.vue\";\nimport FocusTimeEachPrograms from \"./FocusTimeEachPrograms.vue\";\nimport FocusTimeEachProgramsPrecentage from \"./FocusTimeEachProgramsPrecentage.vue\";\nimport TimeLine from \"./TimeLine.vue\";\nimport TodayAchievementTime from \"./TodayAchievementTime.vue\";\nimport WeekAchievementTime from \"./WeekAchievementTime.vue\";\nimport MonthAchievementTime from \"./MonthAchievementTime.vue\";\nexport default {\n  name: \"GridstackComponent\",\n  components: {},\n  setup() {\n    const gridstack = ref(null);\n    const isSidebarOpen = ref(false);\n    const isEditMode = ref(false);\n    let grid;\n    const addWidget = (component, width = 2, height = 2) => {\n      if (!grid) {\n        console.error(\"GridStack is not initialized yet.\");\n        return;\n      }\n      const widgetElement = document.createElement(\"div\");\n      widgetElement.className = \"grid-stack-item\";\n      widgetElement.innerHTML = `\n          <div class=\"grid-stack-item-content\">\n            <div class=\"widget-delete\">✖</div>\n          </div>`;\n      grid.addWidget(widgetElement, {\n        w: width,\n        h: height\n      });\n      const contentElement = widgetElement.querySelector(\".grid-stack-item-content\");\n      if (contentElement) {\n        const app = createApp(component);\n        app.mount(contentElement);\n      } else {\n        console.error(\"Failed to find .grid-stack-item-content element.\");\n      }\n    };\n    const removeWidget = event => {\n      const widgetElement = event.target.closest(\".grid-stack-item\");\n      grid.removeWidget(widgetElement);\n    };\n    const toggleEditMode = () => {\n      isEditMode.value = !isEditMode.value;\n      const deleteButtons = document.querySelectorAll(\".widget-delete\");\n      deleteButtons.forEach(button => {\n        button.style.display = isEditMode.value ? \"block\" : \"none\";\n      });\n    };\n    const toggleSidebar = () => {\n      isSidebarOpen.value = !isSidebarOpen.value;\n    };\n    onMounted(() => {\n      nextTick(() => {\n        const gridElement = gridstack.value;\n        if (!gridElement) {\n          console.error(\"GridStack element not found\");\n          return;\n        }\n        grid = GridStack.init({\n          column: 12,\n          // 그리드 열 수 설정\n          cellHeight: 125,\n          // 셀 높이 설정\n          float: true\n        }, gridElement);\n\n        // 이벤트 위임을 사용하여 삭제 버튼 클릭 처리\n        gridElement.addEventListener(\"click\", event => {\n          if (event.target.classList.contains(\"widget-delete\")) {\n            removeWidget(event);\n          }\n        });\n\n        // 모든 컴포넌트를 초기 상태로 추가\n        const components = [{\n          component: TodayFocus1,\n          width: 2,\n          height: 1\n        }, {\n          component: WeekFocus1,\n          width: 2,\n          height: 1\n        }, {\n          component: MonthFocus1,\n          width: 2,\n          height: 1\n        }, {\n          component: TodayFocus2,\n          width: 4,\n          height: 1\n        }, {\n          component: WeekFocus2,\n          width: 4,\n          height: 1\n        }, {\n          component: MonthFocus2,\n          width: 4,\n          height: 1\n        }, {\n          component: TodayFocus2WithoutID,\n          width: 4,\n          height: 1\n        }, {\n          component: WeekFocus2WithoutID,\n          width: 4,\n          height: 1\n        }, {\n          component: MonthFocus2WithoutID,\n          width: 4,\n          height: 1\n        }, {\n          component: TotalFocus2WithoutID,\n          width: 4,\n          height: 1\n        }, {\n          component: PercentileRank,\n          width: 4,\n          height: 3\n        }, {\n          component: TimeCheck,\n          width: 4,\n          height: 2\n        }, {\n          component: TodayAchievement1,\n          width: 2,\n          height: 1\n        }, {\n          component: WeekAchievement1,\n          width: 2,\n          height: 1\n        }, {\n          component: MonthAchievement1,\n          width: 2,\n          height: 1\n        }, {\n          component: TodayAchievement2,\n          width: 2,\n          height: 2\n        }, {\n          component: WeekAchievement2,\n          width: 2,\n          height: 2\n        }, {\n          component: MonthAchievement2,\n          width: 2,\n          height: 2\n        }, {\n          component: MonthStreakColumn,\n          width: 2,\n          height: 2\n        }, {\n          component: MonthStreakRow,\n          width: 2,\n          height: 2\n        }, {\n          component: HalfYearStreak,\n          width: 8,\n          height: 2\n        }, {\n          component: CalendarCheck,\n          width: 6,\n          height: 4\n        }, {\n          component: FocusTimeEachPrograms,\n          width: 6,\n          height: 4\n        }, {\n          component: FocusTimeEachProgramsPrecentage,\n          width: 6,\n          height: 4\n        }, {\n          component: TimeLine,\n          width: 6,\n          height: 4\n        }, {\n          component: TodayAchievementTime,\n          width: 2,\n          height: 1\n        }, {\n          component: WeekAchievementTime,\n          width: 2,\n          height: 1\n        }, {\n          component: MonthAchievementTime,\n          width: 2,\n          height: 1\n        }];\n        components.forEach(({\n          component,\n          width,\n          height\n        }) => {\n          addWidget(component, width, height);\n        });\n      });\n    });\n    return {\n      gridstack,\n      isSidebarOpen,\n      isEditMode,\n      toggleSidebar,\n      toggleEditMode,\n      addWidget\n    };\n  }\n};","map":{"version":3,"names":["createApp","onMounted","ref","nextTick","GridStack","TodayFocus1","WeekFocus1","MonthFocus1","TodayFocus2","WeekFocus2","MonthFocus2","TodayFocus2WithoutID","WeekFocus2WithoutID","MonthFocus2WithoutID","TotalFocus2WithoutID","PercentileRank","TimeCheck","TodayAchievement1","WeekAchievement1","MonthAchievement1","TodayAchievement2","WeekAchievement2","MonthAchievement2","MonthStreakColumn","MonthStreakRow","HalfYearStreak","CalendarCheck","FocusTimeEachPrograms","FocusTimeEachProgramsPrecentage","TimeLine","TodayAchievementTime","WeekAchievementTime","MonthAchievementTime","name","components","setup","gridstack","isSidebarOpen","isEditMode","grid","addWidget","component","width","height","console","error","widgetElement","document","createElement","className","innerHTML","w","h","contentElement","querySelector","app","mount","removeWidget","event","target","closest","toggleEditMode","value","deleteButtons","querySelectorAll","forEach","button","style","display","toggleSidebar","gridElement","init","column","cellHeight","float","addEventListener","classList","contains"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"content\">\r\n      <div class=\"header\">\r\n        <h1>Dashboard</h1>\r\n        <a class=\"edit-button\" @click=\"toggleEditMode\">/EDIT</a>\r\n      </div>\r\n      <div ref=\"gridstack\" class=\"grid-stack\"></div>\r\n      <button\r\n        class=\"toggle-button\"\r\n        :class=\"{ open: isSidebarOpen }\"\r\n        @click=\"toggleSidebar\"\r\n      >\r\n        ☰\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createApp, onMounted, ref, nextTick } from \"vue\";\r\nimport { GridStack } from \"gridstack\";\r\nimport \"gridstack/dist/gridstack.min.css\";\r\nimport TodayFocus1 from \"./TodayFocus1.vue\";\r\nimport WeekFocus1 from \"./WeekFocus1.vue\";\r\nimport MonthFocus1 from \"./MonthFocus1.vue\";\r\nimport TodayFocus2 from \"./TodayFocus2.vue\";\r\nimport WeekFocus2 from \"./WeekFocus2.vue\";\r\nimport MonthFocus2 from \"./MonthFocus2.vue\";\r\nimport TodayFocus2WithoutID from \"./TodayFocus2WithoutID.vue\";\r\nimport WeekFocus2WithoutID from \"./WeekFocus2WithoutID.vue\";\r\nimport MonthFocus2WithoutID from \"./MonthFocus2WithoutID.vue\";\r\nimport TotalFocus2WithoutID from \"./TotalFocus2WithoutID.vue\";\r\nimport PercentileRank from \"./PercentileRank.vue\";\r\nimport TimeCheck from \"./TimeCheck.vue\";\r\nimport TodayAchievement1 from \"./TodayAchievement1.vue\";\r\nimport WeekAchievement1 from \"./WeekAchievement1.vue\";\r\nimport MonthAchievement1 from \"./MonthAchievement1.vue\";\r\nimport TodayAchievement2 from \"./TodayAchievement2.vue\";\r\nimport WeekAchievement2 from \"./WeekAchievement2.vue\";\r\nimport MonthAchievement2 from \"./MonthAchievement2.vue\";\r\nimport MonthStreakColumn from \"./MonthStreakColumn.vue\";\r\nimport MonthStreakRow from \"./MonthStreakRow.vue\";\r\nimport HalfYearStreak from \"./HalfYearStreak.vue\";\r\nimport CalendarCheck from \"./CalendarCheck.vue\";\r\nimport FocusTimeEachPrograms from \"./FocusTimeEachPrograms.vue\";\r\nimport FocusTimeEachProgramsPrecentage from \"./FocusTimeEachProgramsPrecentage.vue\";\r\nimport TimeLine from \"./TimeLine.vue\";\r\nimport TodayAchievementTime from \"./TodayAchievementTime.vue\";\r\nimport WeekAchievementTime from \"./WeekAchievementTime.vue\";\r\nimport MonthAchievementTime from \"./MonthAchievementTime.vue\";\r\n\r\nexport default {\r\n  name: \"GridstackComponent\",\r\n  components: {},\r\n  setup() {\r\n    const gridstack = ref(null);\r\n    const isSidebarOpen = ref(false);\r\n    const isEditMode = ref(false);\r\n    let grid;\r\n\r\n    const addWidget = (component, width = 2, height = 2) => {\r\n      if (!grid) {\r\n        console.error(\"GridStack is not initialized yet.\");\r\n        return;\r\n      }\r\n\r\n      const widgetElement = document.createElement(\"div\");\r\n      widgetElement.className = \"grid-stack-item\";\r\n      widgetElement.innerHTML = `\r\n          <div class=\"grid-stack-item-content\">\r\n            <div class=\"widget-delete\">✖</div>\r\n          </div>`;\r\n      grid.addWidget(widgetElement, { w: width, h: height });\r\n\r\n      const contentElement = widgetElement.querySelector(\r\n        \".grid-stack-item-content\"\r\n      );\r\n      if (contentElement) {\r\n        const app = createApp(component);\r\n        app.mount(contentElement);\r\n      } else {\r\n        console.error(\"Failed to find .grid-stack-item-content element.\");\r\n      }\r\n    };\r\n\r\n    const removeWidget = (event) => {\r\n      const widgetElement = event.target.closest(\".grid-stack-item\");\r\n      grid.removeWidget(widgetElement);\r\n    };\r\n\r\n    const toggleEditMode = () => {\r\n      isEditMode.value = !isEditMode.value;\r\n      const deleteButtons = document.querySelectorAll(\".widget-delete\");\r\n      deleteButtons.forEach((button) => {\r\n        button.style.display = isEditMode.value ? \"block\" : \"none\";\r\n      });\r\n    };\r\n\r\n    const toggleSidebar = () => {\r\n      isSidebarOpen.value = !isSidebarOpen.value;\r\n    };\r\n\r\n    onMounted(() => {\r\n      nextTick(() => {\r\n        const gridElement = gridstack.value;\r\n        if (!gridElement) {\r\n          console.error(\"GridStack element not found\");\r\n          return;\r\n        }\r\n\r\n        grid = GridStack.init(\r\n          {\r\n            column: 12, // 그리드 열 수 설정\r\n            cellHeight: 125, // 셀 높이 설정\r\n            float: true,\r\n          },\r\n          gridElement\r\n        );\r\n\r\n        // 이벤트 위임을 사용하여 삭제 버튼 클릭 처리\r\n        gridElement.addEventListener(\"click\", (event) => {\r\n          if (event.target.classList.contains(\"widget-delete\")) {\r\n            removeWidget(event);\r\n          }\r\n        });\r\n\r\n        // 모든 컴포넌트를 초기 상태로 추가\r\n        const components = [\r\n          { component: TodayFocus1, width: 2, height: 1 },\r\n          { component: WeekFocus1, width: 2, height: 1 },\r\n          { component: MonthFocus1, width: 2, height: 1 },\r\n          { component: TodayFocus2, width: 4, height: 1 },\r\n          { component: WeekFocus2, width: 4, height: 1 },\r\n          { component: MonthFocus2, width: 4, height: 1 },\r\n          { component: TodayFocus2WithoutID, width: 4, height: 1 },\r\n          { component: WeekFocus2WithoutID, width: 4, height: 1 },\r\n          { component: MonthFocus2WithoutID, width: 4, height: 1 },\r\n          { component: TotalFocus2WithoutID, width: 4, height: 1 },\r\n          { component: PercentileRank, width: 4, height: 3 },\r\n          { component: TimeCheck, width: 4, height: 2 },\r\n          { component: TodayAchievement1, width: 2, height: 1 },\r\n          { component: WeekAchievement1, width: 2, height: 1 },\r\n          { component: MonthAchievement1, width: 2, height: 1 },\r\n          { component: TodayAchievement2, width: 2, height: 2 },\r\n          { component: WeekAchievement2, width: 2, height: 2 },\r\n          { component: MonthAchievement2, width: 2, height: 2 },\r\n          { component: MonthStreakColumn, width: 2, height: 2 },\r\n          { component: MonthStreakRow, width: 2, height: 2 },\r\n          { component: HalfYearStreak, width: 8, height: 2 },\r\n          { component: CalendarCheck, width: 6, height: 4 },\r\n          { component: FocusTimeEachPrograms, width: 6, height: 4 },\r\n          { component: FocusTimeEachProgramsPrecentage, width: 6, height: 4 },\r\n          { component: TimeLine, width: 6, height: 4 },\r\n          { component: TodayAchievementTime, width: 2, height: 1 },\r\n          { component: WeekAchievementTime, width: 2, height: 1 },\r\n          { component: MonthAchievementTime, width: 2, height: 1 },\r\n        ];\r\n\r\n        components.forEach(({ component, width, height }) => {\r\n          addWidget(component, width, height);\r\n        });\r\n      });\r\n    });\r\n\r\n    return {\r\n      gridstack,\r\n      isSidebarOpen,\r\n      isEditMode,\r\n      toggleSidebar,\r\n      toggleEditMode,\r\n      addWidget,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #f8f9fa;\r\n  border-radius: 10px; /* 대시보드 모서리를 둥글게 */\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  width: 100%;\r\n  border-radius: 10px 10px 0 0; /* 상단 모서리 둥글게 */\r\n  margin-bottom: 20px; /* 내용과의 간격 추가 */\r\n}\r\n\r\n.header h1 {\r\n  margin: 0;\r\n}\r\n\r\n.edit-button {\r\n  cursor: pointer;\r\n  color: #3498db;\r\n}\r\n\r\n.sidebar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 250px;\r\n  background-color: #f8f9fa;\r\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.5);\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n  z-index: 1000;\r\n  overflow-y: auto; /* 사이드바 내부 스크롤 설정 */\r\n  border-top-left-radius: 10px; /* 사이드바 모서리를 둥글게 */\r\n  border-bottom-left-radius: 10px; /* 사이드바 모서리를 둥글게 */\r\n}\r\n\r\n.sidebar.open {\r\n  transform: translateX(0);\r\n}\r\n\r\n.toggle-button {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  z-index: 1001;\r\n  transition: right 0.3s ease;\r\n}\r\n\r\n.toggle-button.open {\r\n  right: 270px; /* 사이드바 너비 + 여백 */\r\n}\r\n\r\n.toggle-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.sidebar-content {\r\n  padding: 20px;\r\n  height: calc(\r\n    100% - 40px\r\n  ); /* 높이를 계산하여 상단 버튼을 포함하지 않도록 설정 */\r\n}\r\n\r\n.sidebar-content button {\r\n  display: block;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar-content button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n  transition: margin-right 0.3s ease, width 0.3s ease;\r\n  background-color: #f8f9fa;\r\n  border-radius: 10px; /* 대시보드 모서리를 둥글게 */\r\n}\r\n\r\n.layout.sidebar-open .content {\r\n  margin-right: 250px; /* 사이드바의 너비만큼 오른쪽으로 이동 */\r\n}\r\n\r\n.grid-stack {\r\n  width: 100%;\r\n  padding: 20px; /* 사이드바와 대시보드 간의 여백을 추가 */\r\n  flex-shrink: 0; /* 대시보드가 사이드바에 밀리지 않도록 고정 */\r\n}\r\n\r\n.grid-stack-item {\r\n  width: calc(100% / 12); /* 12열 그리드에 맞게 셀 너비를 설정 */\r\n}\r\n\r\n.grid-stack-item-content {\r\n  background-color: #ffffff !important; /* 위젯 배경색을 하얀색으로 설정 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #333; /* 텍스트 색상 변경 */\r\n  height: 100%;\r\n  border-radius: 10px; /* 위젯 모서리를 둥글게 설정 */\r\n  white-space: nowrap; /* 줄넘김 방지 */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* 글자 길어질 경우 생략표시 */\r\n  position: relative; /* 삭제 버튼 위치를 위해 필요 */\r\n}\r\n\r\n.widget-delete {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background: red;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  display: none; /* 초기에는 숨김 */\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}