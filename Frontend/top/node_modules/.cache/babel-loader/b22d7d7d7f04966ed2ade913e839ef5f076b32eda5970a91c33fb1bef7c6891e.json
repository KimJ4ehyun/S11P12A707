{"ast":null,"code":"import { Bar } from 'vue-chartjs';\nimport { Chart, registerables } from 'chart.js';\nimport { reactive, ref, onMounted, watch } from 'vue';\nimport axios from 'axios';\nChart.register(...registerables);\nexport default {\n  components: {\n    'bar-chart': Bar\n  },\n  setup() {\n    const fetchFocusTimeData = async () => {\n      try {\n        const response = await axios.get('https://i11a707.p.ssafy.io/api/dash/stats/focus-time/detail', {\n          params: {\n            period: 'day'\n          }\n        });\n        const usageData = ref(Array(24).fill(0)); // Initialize usageData with 24 hours of zeros\n\n        response.data.data.forEach(entry => {\n          usageData.value[entry.startTime] = entry.focusTime / 60; // Assuming focusTime is in seconds, convert to minutes\n        });\n        console.log(usageData.value);\n        updateChartData();\n      } catch (error) {\n        console.error('Error fetching focus time data:', error);\n      }\n    };\n    console.log(usageData.value);\n    const chartData = reactive({\n      labels: Array.from({\n        length: 24\n      }, (_, i) => i.toString()),\n      datasets: [{\n        label: '집중 시간',\n        data: usageData.value,\n        // Directly bind usageData to chart data\n        backgroundColor: usageData.value.map(() => '#c6d1ff')\n      }]\n    });\n    console.log(chartData.datasets[0].data);\n    const chartOptions = reactive({\n      scales: {\n        x: {\n          ticks: {\n            maxRotation: 0,\n            minRotation: 0,\n            font: {\n              size: 12,\n              family: 'Arial'\n            },\n            padding: 5\n          },\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          beginAtZero: true,\n          max: 60,\n          ticks: {\n            font: {\n              size: 12,\n              family: 'Arial'\n            },\n            padding: 5\n          },\n          grid: {\n            display: true\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: true,\n          mode: 'index',\n          intersect: true,\n          position: 'nearest',\n          callbacks: {\n            label: function (context) {\n              let label = context.dataset.label || '';\n              if (label) {\n                label += ': ';\n              }\n              if (context.parsed.y !== null) {\n                label += context.parsed.y;\n              }\n              return label;\n            }\n          }\n        }\n      }\n    });\n    const updateChartData = () => {\n      const maxUsage = Math.max(...usageData.value);\n      chartData.datasets[0].backgroundColor = usageData.value.map(value => value === maxUsage ? '#5865f2' : '#c6d1ff');\n    };\n    onMounted(() => {\n      fetchFocusTimeData();\n    });\n    watch(usageData, newVal => {\n      chartData.datasets[0].data = [...newVal];\n    });\n    return {\n      chartData,\n      chartOptions\n    };\n  }\n};","map":{"version":3,"names":["Bar","Chart","registerables","reactive","ref","onMounted","watch","axios","register","components","setup","fetchFocusTimeData","response","get","params","period","usageData","Array","fill","data","forEach","entry","value","startTime","focusTime","console","log","updateChartData","error","chartData","labels","from","length","_","i","toString","datasets","label","backgroundColor","map","chartOptions","scales","x","ticks","maxRotation","minRotation","font","size","family","padding","grid","display","y","beginAtZero","max","plugins","legend","tooltip","enabled","mode","intersect","position","callbacks","context","dataset","parsed","maxUsage","Math","newVal"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\TimeLine.vue"],"sourcesContent":["<template>\r\n  <div class=\"bigbox\">\r\n    <h2>타임라인</h2>\r\n    <bar-chart class=\"chart\" :data=\"chartData\" :options=\"chartOptions\"></bar-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Bar } from 'vue-chartjs';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { reactive, ref, onMounted, watch } from 'vue';\r\nimport axios from 'axios';\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  components: {\r\n    'bar-chart': Bar\r\n  },\r\n  setup() {\r\n    const fetchFocusTimeData = async () => {\r\n      try {\r\n        const response = await axios.get('https://i11a707.p.ssafy.io/api/dash/stats/focus-time/detail', {\r\n          params: { period: 'day' }\r\n        });\r\n        \r\n        const usageData = ref(Array(24).fill(0)); // Initialize usageData with 24 hours of zeros\r\n\r\n        response.data.data.forEach(entry => {\r\n          usageData.value[entry.startTime] = entry.focusTime / 60; // Assuming focusTime is in seconds, convert to minutes\r\n        });\r\n\r\n        console.log(usageData.value)\r\n  \r\n        updateChartData();\r\n      } catch (error) {\r\n        console.error('Error fetching focus time data:', error);\r\n      }\r\n    };\r\n    console.log(usageData.value)\r\n\r\n    const chartData = reactive({\r\n      labels: Array.from({ length: 24 }, (_, i) => i.toString()),\r\n      datasets: [{\r\n        label: '집중 시간',\r\n        data: usageData.value, // Directly bind usageData to chart data\r\n        backgroundColor: usageData.value.map(() => '#c6d1ff'),\r\n      }]\r\n    });\r\n    console.log(chartData.datasets[0].data)\r\n\r\n    const chartOptions = reactive({\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            maxRotation: 0,\r\n            minRotation: 0,\r\n            font: {\r\n              size: 12,\r\n              family: 'Arial'\r\n            },\r\n            padding: 5,\r\n          },\r\n          grid: {\r\n            display: false\r\n          }\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          max: 60,\r\n          ticks: {\r\n            font: {\r\n              size: 12,\r\n              family: 'Arial'\r\n            },\r\n            padding: 5\r\n          },\r\n          grid: {\r\n            display: true\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          mode: 'index',\r\n          intersect: true,\r\n          position: 'nearest',\r\n          callbacks: {\r\n            label: function(context) {\r\n              let label = context.dataset.label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              if (context.parsed.y !== null) {\r\n                label += context.parsed.y;\r\n              }\r\n              return label;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    const updateChartData = () => {\r\n      const maxUsage = Math.max(...usageData.value);\r\n      chartData.datasets[0].backgroundColor = usageData.value.map(value => value === maxUsage ? '#5865f2' : '#c6d1ff');\r\n    };\r\n\r\n\r\n    onMounted(() => {\r\n      fetchFocusTimeData();\r\n    });\r\n\r\n    watch(usageData, (newVal) => {\r\n      chartData.datasets[0].data = [...newVal];\r\n    });\r\n\r\n    return {\r\n      chartData,\r\n      chartOptions\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bigbox {\r\n  height: 400px;\r\n  width: 644px;\r\n}\r\n\r\n.chart {\r\n  height: 100%;\r\n  width: 100% ;\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nh2 {\r\n  color: #b0bec5;\r\n  font-weight: 700;\r\n  margin-bottom: 0px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}