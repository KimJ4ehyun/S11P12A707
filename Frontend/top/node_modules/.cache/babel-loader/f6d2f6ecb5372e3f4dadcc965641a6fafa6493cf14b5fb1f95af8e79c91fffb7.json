{"ast":null,"code":"import axios from \"axios\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  setup() {\n    const monthlyAchievement = ref(\"0%\");\n    const timeStringToSeconds = timeString => {\n      const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\n      return hours * 3600 + minutes * 60 + seconds;\n    };\n    const fetchFocusTime = async () => {\n      try {\n        const response = await axios.get(\"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\", {\n          params: {\n            period: \"month\"\n          }\n        });\n        console.log(response);\n        const monthlyFocusTime = timeStringToSeconds(response.data.totalFocusTime);\n        return monthlyFocusTime;\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\n        return 0;\n      }\n    };\n    const fetchTimeGoal = async () => {\n      try {\n        const response = await axios.get(\"https://i11a707.p.ssafy.io:8082/focus-time/goal\");\n        let timeGoal = timeStringToSeconds(\"00:00:01\");\n        if (response.data.timeGoal) {\n          timeGoal = timeStringToSeconds(response.data.timeGoal);\n        }\n        return timeGoal;\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\n        return 0;\n      }\n    };\n    const updateMonthlyAchievement = async () => {\n      const monthlyFocusTime = await fetchFocusTime();\n      const timeGoal = await fetchTimeGoal();\n      if (timeGoal > 0) {\n        const achievementRate = monthlyFocusTime / timeGoal * 100;\n        monthlyAchievement.value = `${achievementRate.toFixed(2)}%`;\n      } else {\n        monthlyAchievement.value = \"0%\";\n      }\n    };\n    onMounted(() => {\n      updateMonthlyAchievement();\n    });\n    return {\n      monthlyAchievement\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","setup","monthlyAchievement","timeStringToSeconds","timeString","hours","minutes","seconds","split","map","Number","fetchFocusTime","response","get","params","period","console","log","monthlyFocusTime","data","totalFocusTime","error","fetchTimeGoal","timeGoal","updateMonthlyAchievement","achievementRate","value","toFixed"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\MonthAchievement1.vue"],"sourcesContent":["<template>\r\n  <div class=\"box6\">\r\n    <div class=\"element6\">\r\n      <div class=\"overlap-group6\">\r\n        <div class=\"text6\">{{ monthlyAchievement }}</div>\r\n        <div class=\"title-data6\">월간 목표 달성률</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    const monthlyAchievement = ref(\"0%\");\r\n\r\n    const timeStringToSeconds = (timeString) => {\r\n      const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\r\n      return hours * 3600 + minutes * 60 + seconds;\r\n    };\r\n\r\n    const fetchFocusTime = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\",\r\n          {\r\n            params: {\r\n              period: \"month\",\r\n            },\r\n          }\r\n        );\r\n        console.log(response);\r\n        const monthlyFocusTime = timeStringToSeconds(\r\n          response.data.totalFocusTime\r\n        );\r\n        return monthlyFocusTime;\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const fetchTimeGoal = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io:8082/focus-time/goal\"\r\n        );\r\n        let timeGoal = timeStringToSeconds(\"00:00:01\");\r\n        if (response.data.timeGoal) {\r\n          timeGoal = timeStringToSeconds(response.data.timeGoal);\r\n        }\r\n        return timeGoal;\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const updateMonthlyAchievement = async () => {\r\n      const monthlyFocusTime = await fetchFocusTime();\r\n      const timeGoal = await fetchTimeGoal();\r\n\r\n      if (timeGoal > 0) {\r\n        const achievementRate = (monthlyFocusTime / timeGoal) * 100;\r\n        monthlyAchievement.value = `${achievementRate.toFixed(2)}%`;\r\n      } else {\r\n        monthlyAchievement.value = \"0%\";\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      updateMonthlyAchievement();\r\n    });\r\n\r\n    return {\r\n      monthlyAchievement,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box6 {\r\n  height: 100px;\r\n  width: 161px;\r\n}\r\n\r\n.box6 .element6 {\r\n  height: 100px;\r\n  left: 0;\r\n  top: 0;\r\n  width: 165px;\r\n}\r\n\r\n.box6 .overlap-group6 {\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 3.5px 5.5px #00000005;\r\n  height: 100px;\r\n  position: relative;\r\n  width: 161px;\r\n}\r\n\r\n.box6 .text6 {\r\n  color: #1d1a1a;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  left: 40px;\r\n  letter-spacing: 0.38px;\r\n  line-height: 24px;\r\n  position: absolute;\r\n  top: 45px;\r\n  white-space: nowrap;\r\n  width: 63px;\r\n}\r\n\r\n.box6 .title-data6 {\r\n  color: #a0aec0;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  left: 16px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 22px;\r\n  position: absolute;\r\n  top: 8px;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"],"mappings":"AAYA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,kBAAiB,GAAIH,GAAG,CAAC,IAAI,CAAC;IAEpC,MAAMI,mBAAkB,GAAKC,UAAU,IAAK;MAC1C,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,IAAIH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MACnE,OAAOL,KAAI,GAAI,IAAG,GAAIC,OAAM,GAAI,EAAC,GAAIC,OAAO;IAC9C,CAAC;IAED,MAAMI,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAC9B,sDAAsD,EACtD;UACEC,MAAM,EAAE;YACNC,MAAM,EAAE;UACV;QACF,CACF,CAAC;QACDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QACrB,MAAMM,gBAAe,GAAIf,mBAAmB,CAC1CS,QAAQ,CAACO,IAAI,CAACC,cAChB,CAAC;QACD,OAAOF,gBAAgB;MACzB,EAAE,OAAOG,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAO,CAAC;MACV;IACF,CAAC;IAED,MAAMC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAC9B,iDACF,CAAC;QACD,IAAIU,QAAO,GAAIpB,mBAAmB,CAAC,UAAU,CAAC;QAC9C,IAAIS,QAAQ,CAACO,IAAI,CAACI,QAAQ,EAAE;UAC1BA,QAAO,GAAIpB,mBAAmB,CAACS,QAAQ,CAACO,IAAI,CAACI,QAAQ,CAAC;QACxD;QACA,OAAOA,QAAQ;MACjB,EAAE,OAAOF,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAO,CAAC;MACV;IACF,CAAC;IAED,MAAMG,wBAAuB,GAAI,MAAAA,CAAA,KAAY;MAC3C,MAAMN,gBAAe,GAAI,MAAMP,cAAc,CAAC,CAAC;MAC/C,MAAMY,QAAO,GAAI,MAAMD,aAAa,CAAC,CAAC;MAEtC,IAAIC,QAAO,GAAI,CAAC,EAAE;QAChB,MAAME,eAAc,GAAKP,gBAAe,GAAIK,QAAQ,GAAI,GAAG;QAC3DrB,kBAAkB,CAACwB,KAAI,GAAI,GAAGD,eAAe,CAACE,OAAO,CAAC,CAAC,CAAC,GAAG;MAC7D,OAAO;QACLzB,kBAAkB,CAACwB,KAAI,GAAI,IAAI;MACjC;IACF,CAAC;IAED1B,SAAS,CAAC,MAAM;MACdwB,wBAAwB,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO;MACLtB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}