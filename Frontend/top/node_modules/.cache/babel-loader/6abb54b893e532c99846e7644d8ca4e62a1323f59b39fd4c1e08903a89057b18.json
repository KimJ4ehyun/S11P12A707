{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7f08e6fc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"box6\"\n};\nconst _hoisted_2 = {\n  class: \"element6\"\n};\nconst _hoisted_3 = {\n  class: \"overlap-group6\"\n};\nconst _hoisted_4 = {\n  class: \"text6\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-data6\"\n}, \"월간 목표 달성률\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.monthlyAchievement), 1 /* TEXT */), _hoisted_5])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$setup","monthlyAchievement","_hoisted_5"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\MonthAchievement1.vue"],"sourcesContent":["<template>\r\n  <div class=\"box6\">\r\n    <div class=\"element6\">\r\n      <div class=\"overlap-group6\">\r\n        <div class=\"text6\">{{ monthlyAchievement }}</div>\r\n        <div class=\"title-data6\">월간 목표 달성률</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    const monthlyAchievement = ref(\"0%\");\r\n\r\n    const timeStringToSeconds = (timeString) => {\r\n      const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\r\n      return hours * 3600 + minutes * 60 + seconds;\r\n    };\r\n\r\n    const fetchFocusTime = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\",\r\n          {\r\n            params: {\r\n              period: \"month\",\r\n            },\r\n          }\r\n        );\r\n        const monthlyFocusTime = timeStringToSeconds(\r\n          response.data.data.totalFocusTime\r\n        );\r\n        return monthlyFocusTime;\r\n      } catch (error) {\r\n        console.error(\r\n          \"MonthAchievement1 데이터를 가져오는 중 오류 발생1:\",\r\n          error\r\n        );\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const fetchTimeGoal = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/focus-time/goal\"\r\n        );\r\n        let timeGoal = 1;\r\n        if (response.data.data.timeGoal) {\r\n          timeGoal = response.data.data.timeGoal * 60;\r\n        }\r\n        return timeGoal;\r\n      } catch (error) {\r\n        console.error(\r\n          \"MonthAchievement1 데이터를 가져오는 중 오류 발생2:\",\r\n          error\r\n        );\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const updateMonthlyAchievement = async () => {\r\n      const monthlyFocusTime = await fetchFocusTime();\r\n      const timeGoal = await fetchTimeGoal();\r\n\r\n      if (timeGoal > 0) {\r\n        const achievementRate = (monthlyFocusTime / timeGoal) * 100;\r\n        if (achievementRate <= 100) {\r\n          monthlyAchievement.value = `${achievementRate.toFixed(2)}%`;\r\n        } else {\r\n          monthlyAchievement.value = \"100%\";\r\n        }\r\n      } else {\r\n        monthlyAchievement.value = \"0.00%\";\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      updateMonthlyAchievement();\r\n    });\r\n\r\n    return {\r\n      monthlyAchievement,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box6 {\r\n  height: 100px;\r\n  width: 161px;\r\n}\r\n\r\n.box6 .element6 {\r\n  height: 100px;\r\n  left: 0;\r\n  top: 0;\r\n  width: 165px;\r\n}\r\n\r\n.box6 .overlap-group6 {\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 3.5px 5.5px #00000005;\r\n  height: 100px;\r\n  position: relative;\r\n  width: 161px;\r\n}\r\n\r\n.box6 .text6 {\r\n  color: #1d1a1a;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  left: 40px;\r\n  letter-spacing: 0.38px;\r\n  line-height: 24px;\r\n  position: absolute;\r\n  top: 45px;\r\n  white-space: nowrap;\r\n  width: 63px;\r\n}\r\n\r\n.box6 .title-data6 {\r\n  color: #a0aec0;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  left: 16px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 22px;\r\n  position: absolute;\r\n  top: 8px;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAO;gEAClBC,mBAAA,CAAwC;EAAnCD,KAAK,EAAC;AAAa,GAAC,WAAS;;uBAJxCE,mBAAA,CAOM,OAPNC,UAOM,GANJF,mBAAA,CAKM,OALNG,UAKM,GAJJH,mBAAA,CAGM,OAHNI,UAGM,GAFJJ,mBAAA,CAAiD,OAAjDK,UAAiD,EAAAC,gBAAA,CAA3BC,MAAA,CAAAC,kBAAkB,kBACxCC,UAAwC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}