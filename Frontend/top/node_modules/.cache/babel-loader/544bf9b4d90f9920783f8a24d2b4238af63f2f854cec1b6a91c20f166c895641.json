{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      appList: []\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\");\n        if (response.status === 200 && response.data.statusCode === \"200\") {\n          this.appList = response.data.data.appList.map(app => ({\n            ...app,\n            percentage: this.calculatePercentage(app.focusTime, response.data.data.totalFocusTime)\n          }));\n        } else {\n          console.error(\"Failed to fetch data:\", response.data.message);\n        }\n      } catch (error) {\n        console.error(\"API request failed:\", error);\n      }\n    },\n    formatTime(seconds) {\n      const h = Math.floor(seconds / 3600);\n      const m = Math.floor(seconds % 3600 / 60);\n      const s = seconds % 60;\n      return `${h}:${m < 10 ? \"0\" : \"\"}${m}:${s < 10 ? \"0\" : \"\"}${s}`;\n    },\n    calculatePercentage(focusTime, totalFocusTime) {\n      return (focusTime / totalFocusTime * 100).toFixed(2);\n    },\n    getImagePath(appName) {\n      try {\n        return require(`../static/img/application_icon/${appName.toLowerCase().replace(/\\s+/g, \"\")}.png`);\n      } catch (e) {\n        return require(\"../static/img/application_icon/default.png\"); // 기본 이미지 경로\n      }\n    },\n    handleImageError(event) {\n      event.target.src = require(\"../static/img/application_icon/default.png\"); // 기본 이미지 경로\n    }\n  }\n};","map":{"version":3,"names":["axios","data","appList","mounted","fetchData","methods","response","get","status","statusCode","map","app","percentage","calculatePercentage","focusTime","totalFocusTime","console","error","message","formatTime","seconds","h","Math","floor","m","s","toFixed","getImagePath","appName","require","toLowerCase","replace","e","handleImageError","event","target","src"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\FocusTimeEachProgramsPrecentage.vue"],"sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <div class=\"element\">\r\n      <div class=\"text-wrapper-4\">프로그램 별 집중 시간</div>\r\n      <div class=\"overlap-group\">\r\n        <div class=\"titles\">\r\n          <div class=\"text-wrapper-3\">Programs</div>\r\n          <div class=\"text-wrapper-2\">집중 시간</div>\r\n          <div class=\"text-wrapper-2\">집중 비율</div>\r\n        </div>\r\n        <div class=\"list\">\r\n          <div class=\"items\">\r\n            <div\r\n              v-for=\"(app, index) in appList\"\r\n              :key=\"index\"\r\n              class=\"soft-UI-XD-1\"\r\n            >\r\n              <div class=\"item-content\">\r\n                <img\r\n                  class=\"icon\"\r\n                  :src=\"getImagePath(app.name)\"\r\n                  :alt=\"app.name\"\r\n                  @error=\"handleImageError\"\r\n                />\r\n                <div class=\"app-name\">{{ app.name }}</div>\r\n                <div class=\"text-wrapper\">{{ formatTime(app.focusTime) }}</div>\r\n                <div class=\"text-wrapper\">{{ app.percentage }}%</div>\r\n                <div class=\"progress-bar\">\r\n                  <div class=\"progress\" :style=\"{ width: app.percentage + '%' }\"></div>\r\n                </div>\r\n              </div>\r\n              <img class=\"line\" alt=\"Line\" src=\"../static/img/line.png\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      appList: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\"\r\n        );\r\n        if (response.status === 200 && response.data.statusCode === \"200\") {\r\n          this.appList = response.data.data.appList.map(app => ({\r\n            ...app,\r\n            percentage: this.calculatePercentage(app.focusTime, response.data.data.totalFocusTime)\r\n          }));\r\n        } else {\r\n          console.error(\"Failed to fetch data:\", response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"API request failed:\", error);\r\n      }\r\n    },\r\n    formatTime(seconds) {\r\n      const h = Math.floor(seconds / 3600);\r\n      const m = Math.floor((seconds % 3600) / 60);\r\n      const s = seconds % 60;\r\n      return `${h}:${m < 10 ? \"0\" : \"\"}${m}:${s < 10 ? \"0\" : \"\"}${s}`;\r\n    },\r\n    calculatePercentage(focusTime, totalFocusTime) {\r\n      return ((focusTime / totalFocusTime) * 100).toFixed(2);\r\n    },\r\n    getImagePath(appName) {\r\n      try {\r\n        return require(`../static/img/application_icon/${appName\r\n          .toLowerCase()\r\n          .replace(/\\s+/g, \"\")}.png`);\r\n      } catch (e) {\r\n        return require(\"../static/img/application_icon/default.png\"); // 기본 이미지 경로\r\n      }\r\n    },\r\n    handleImageError(event) {\r\n      event.target.src = require(\"../static/img/application_icon/default.png\"); // 기본 이미지 경로\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box {\r\n  height: 400px;\r\n  width: 644px;\r\n  padding-top: 20px;\r\n}\r\n\r\n.box .element {\r\n  height: 400px;\r\n  left: 0;\r\n  top: 0;\r\n  width: 644px;\r\n}\r\n\r\n.box .overlap-group {\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 3.5px 5.5px #00000005;\r\n  height: 400px;\r\n  position: relative;\r\n  width: 644px;\r\n  padding: 20px;\r\n}\r\n\r\n.box .list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.box .items {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.box .soft-UI-XD-1 {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.box .item-content {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.box .icon {\r\n  height: 25px;\r\n  width: 25px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.box .app-name {\r\n  color: #2d3748;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  letter-spacing: 0;\r\n  line-height: 19.6px;\r\n  white-space: nowrap;\r\n  margin-left: 10px;\r\n  flex-grow: 1;\r\n  text-align: left;\r\n}\r\n\r\n.box .text-wrapper {\r\n  color: #2d3748;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 0;\r\n  line-height: 25.2px;\r\n  white-space: nowrap;\r\n  margin-right: 10px;\r\n}\r\n\r\n.box .progress-bar {\r\n  height: 10px;\r\n  width: 100px;\r\n  background-color: #c6d1ff; /* 연한 색상 */\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin-left: 10px;\r\n}\r\n\r\n.box .progress {\r\n  height: 100%;\r\n  background-color: #5865f2;\r\n}\r\n\r\n.box .line {\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: #e0e0e0;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.box .titles {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.box .text-wrapper-2,\r\n.box .text-wrapper-3 {\r\n  color: #a0aec0;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  letter-spacing: 0;\r\n  line-height: 15px;\r\n}\r\n\r\n.box .text-wrapper-4 {\r\n  color: #a0aec0;\r\n  font-family: \"Helvetica-BoldOblique\", Helvetica;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 0;\r\n  line-height: 25.2px;\r\n  margin-bottom: 10px;\r\n  text-align: left;\r\n  margin-left: 20px;\r\n}\r\n</style>"],"mappings":"AAyCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAC9B,sDACF,CAAC;QACD,IAAID,QAAQ,CAACE,MAAK,KAAM,GAAE,IAAKF,QAAQ,CAACL,IAAI,CAACQ,UAAS,KAAM,KAAK,EAAE;UACjE,IAAI,CAACP,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACA,IAAI,CAACC,OAAO,CAACQ,GAAG,CAACC,GAAE,KAAM;YACpD,GAAGA,GAAG;YACNC,UAAU,EAAE,IAAI,CAACC,mBAAmB,CAACF,GAAG,CAACG,SAAS,EAAER,QAAQ,CAACL,IAAI,CAACA,IAAI,CAACc,cAAc;UACvF,CAAC,CAAC,CAAC;QACL,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEX,QAAQ,CAACL,IAAI,CAACiB,OAAO,CAAC;QAC/D;MACF,EAAE,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IACDE,UAAUA,CAACC,OAAO,EAAE;MAClB,MAAMC,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAM,GAAI,IAAI,CAAC;MACpC,MAAMI,CAAA,GAAIF,IAAI,CAACC,KAAK,CAAEH,OAAM,GAAI,IAAI,GAAI,EAAE,CAAC;MAC3C,MAAMK,CAAA,GAAIL,OAAM,GAAI,EAAE;MACtB,OAAO,GAAGC,CAAC,IAAIG,CAAA,GAAI,EAAC,GAAI,GAAE,GAAI,EAAE,GAAGA,CAAC,IAAIC,CAAA,GAAI,EAAC,GAAI,GAAE,GAAI,EAAE,GAAGA,CAAC,EAAE;IACjE,CAAC;IACDZ,mBAAmBA,CAACC,SAAS,EAAEC,cAAc,EAAE;MAC7C,OAAO,CAAED,SAAQ,GAAIC,cAAc,GAAI,GAAG,EAAEW,OAAO,CAAC,CAAC,CAAC;IACxD,CAAC;IACDC,YAAYA,CAACC,OAAO,EAAE;MACpB,IAAI;QACF,OAAOC,OAAO,CAAC,kCAAkCD,OAAM,CACpDE,WAAW,CAAC,EACZC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC;MAC/B,EAAE,OAAOC,CAAC,EAAE;QACV,OAAOH,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChE;IACF,CAAC;IACDI,gBAAgBA,CAACC,KAAK,EAAE;MACtBA,KAAK,CAACC,MAAM,CAACC,GAAE,GAAIP,OAAO,CAAC,4CAA4C,CAAC,EAAE;IAC5E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}