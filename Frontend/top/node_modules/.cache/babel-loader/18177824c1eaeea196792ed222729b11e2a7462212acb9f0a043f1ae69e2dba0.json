{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7eecb7fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"goal-container\"\n};\nconst _hoisted_2 = {\n  class: \"goal-chart\"\n};\nconst _hoisted_3 = {\n  viewBox: \"0 0 36 36\",\n  class: \"circular-chart\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  class: \"circle-bg\",\n  d: \"M18 2.0845\\r\\n             a 15.9155 15.9155 0 0 1 0 31.831\\r\\n             a 15.9155 15.9155 0 0 1 0 -31.831\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  x: \"18\",\n  y: \"20.35\",\n  class: \"percentage\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"goal-label\"\n}, \"월간 목표 달성률\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [_hoisted_4, _createElementVNode(\"path\", {\n    class: _normalizeClass(['circle', {\n      'no-animation': !$props.animated\n    }]),\n    style: _normalizeStyle({\n      strokeDasharray: `${$setup.percentage}, 100`\n    }),\n    d: \"M18 2.0845\\r\\n             a 15.9155 15.9155 0 0 1 0 31.831\\r\\n             a 15.9155 15.9155 0 0 1 0 -31.831\"\n  }, null, 6 /* CLASS, STYLE */), _createElementVNode(\"text\", _hoisted_5, _toDisplayString($setup.percentage) + \"%\", 1 /* TEXT */)]))]), _hoisted_6]);\n}","map":{"version":3,"names":["class","viewBox","_createElementVNode","d","x","y","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_normalizeClass","$props","animated","style","_normalizeStyle","strokeDasharray","$setup","percentage","_hoisted_5","_toDisplayString","_hoisted_6"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\MonthAchievement2.vue"],"sourcesContent":["<template>\r\n  <div class=\"goal-container\">\r\n    <div class=\"goal-chart\">\r\n      <svg viewBox=\"0 0 36 36\" class=\"circular-chart\">\r\n        <path\r\n          class=\"circle-bg\"\r\n          d=\"M18 2.0845\r\n             a 15.9155 15.9155 0 0 1 0 31.831\r\n             a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n        <path\r\n          :class=\"['circle', { 'no-animation': !animated }]\"\r\n          :style=\"{ strokeDasharray: `${percentage}, 100` }\"\r\n          d=\"M18 2.0845\r\n             a 15.9155 15.9155 0 0 1 0 31.831\r\n             a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n        <text x=\"18\" y=\"20.35\" class=\"percentage\">{{ percentage }}%</text>\r\n      </svg>\r\n    </div>\r\n    <div class=\"goal-label\">월간 목표 달성률</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nexport default {\r\n  name: \"GoalChart\",\r\n  props: {\r\n    animated: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  setup() {\r\n    const percentage = ref(0);\r\n\r\n    const timeStringToSeconds = (timeString) => {\r\n      const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\r\n      return hours * 3600 + minutes * 60 + seconds;\r\n    };\r\n\r\n    const fetchFocusTime = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/dash/stats/focus-time\",\r\n          {\r\n            params: {\r\n              period: \"month\",\r\n            },\r\n          }\r\n        );\r\n        console.log(response);\r\n        const monthlyFocusTime = timeStringToSeconds(\r\n          response.data.totalFocusTime\r\n        );\r\n        return monthlyFocusTime;\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const fetchTimeGoal = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://i11a707.p.ssafy.io/api/focus-time/goal\"\r\n        );\r\n        console.log(response);\r\n        const timeGoal = timeStringToSeconds(response.data.timeGoal);\r\n        return timeGoal;\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const updatePercentage = async () => {\r\n      const monthlyFocusTime = await fetchFocusTime();\r\n      const timeGoal = await fetchTimeGoal();\r\n\r\n      if (timeGoal > 0) {\r\n        const achievementRate = (monthlyFocusTime / timeGoal) * 100;\r\n        percentage.value = achievementRate.toFixed(2);\r\n      } else {\r\n        percentage.value = \"0\";\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      updatePercentage();\r\n    });\r\n\r\n    return {\r\n      percentage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.goal-container {\r\n  text-align: center;\r\n  height: 200px;\r\n  width: 161px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.goal-chart {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.circular-chart {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.circle-bg {\r\n  fill: none;\r\n  stroke: #eee;\r\n  stroke-width: 3.8;\r\n}\r\n\r\n.circle {\r\n  fill: none;\r\n  stroke-width: 3.8;\r\n  stroke: #5865f2;\r\n  stroke-linecap: round;\r\n  transition: stroke-dasharray 1s ease-out;\r\n}\r\n\r\n.no-animation {\r\n  transition: none;\r\n}\r\n\r\n.percentage {\r\n  fill: #000;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 0.5em;\r\n  text-anchor: middle;\r\n}\r\n\r\n.goal-label {\r\n  margin-top: 10px;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 1em;\r\n  color: #888;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAY;;EAChBC,OAAO,EAAC,WAAW;EAACD,KAAK,EAAC;;gEAC7BE,mBAAA,CAKE;EAJAF,KAAK,EAAC,WAAW;EACjBG,CAAC,EAAC;;;EAWEC,CAAC,EAAC,IAAI;EAACC,CAAC,EAAC,OAAO;EAACL,KAAK,EAAC;;gEAGjCE,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAY,GAAC,WAAS;;uBAnBnCM,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJL,mBAAA,CAiBM,OAjBNM,UAiBM,I,cAhBJF,mBAAA,CAeM,OAfNG,UAeM,GAdJC,UAKE,EACFR,mBAAA,CAME;IALCF,KAAK,EAXhBW,eAAA;MAAA,iBAWgDC,MAAA,CAAAC;IAAQ;IAC7CC,KAAK,EAZhBC,eAAA;MAAAC,eAAA,KAYwCC,MAAA,CAAAC,UAAU;IAAA;IACxCf,CAAC,EAAC;kCAIJD,mBAAA,CAAkE,QAAlEiB,UAAkE,EAAAC,gBAAA,CAArBH,MAAA,CAAAC,UAAU,IAAG,GAAC,gB,MAG/DG,UAAuC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}