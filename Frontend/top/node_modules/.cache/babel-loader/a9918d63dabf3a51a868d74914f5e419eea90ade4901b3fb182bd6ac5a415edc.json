{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"StreakChart\",\n  props: {\n    activeDates: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n      months: this.generateMonths()\n    };\n  },\n  computed: {\n    filteredMonths() {\n      // Return the last 6 months from the data\n      return this.months.slice(-6);\n    }\n  },\n  methods: {\n    generateMonths() {\n      const months = [];\n      const today = new Date();\n      for (let i = 5; i >= 0; i--) {\n        const date = new Date(today.getFullYear(), today.getMonth() - i, 1);\n        months.push(this.generateMonthData(date));\n      }\n      return months;\n    },\n    generateMonthData(date) {\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      const monthName = date.toLocaleString('default', {\n        month: 'long'\n      });\n      const weeks = this.generateWeeks(year, month);\n      return {\n        year,\n        name: monthName,\n        weeks\n      };\n    },\n    generateWeeks(year, month) {\n      const weeks = [];\n      let week = new Array(7).fill({\n        active: false\n      });\n      const date = new Date(year, month, 1);\n      const firstDay = date.getDay();\n      let currentWeekIndex = 0;\n      for (let i = 0; i < firstDay; i++) {\n        week[i] = {\n          active: false\n        };\n      }\n      while (date.getMonth() === month) {\n        if (date.getDay() === 0 && date.getDate() !== 1) {\n          weeks.push(week);\n          week = new Array(7).fill({\n            active: false\n          });\n        }\n        const day = date.getDate();\n        const active = this.activeDates.includes(`${year}-${month + 1}-${day}`);\n        week[date.getDay()] = {\n          active\n        };\n        date.setDate(day + 1);\n      }\n      currentWeekIndex++;\n      weeks.push(week);\n      while (weeks.length < 6) {\n        weeks.push(new Array(7).fill({\n          active: false\n        }));\n      }\n      return weeks;\n    }\n  }\n};","map":{"version":3,"names":["name","props","activeDates","type","Array","default","data","days","months","generateMonths","computed","filteredMonths","slice","methods","today","Date","i","date","getFullYear","getMonth","push","generateMonthData","year","month","monthName","toLocaleString","weeks","generateWeeks","week","fill","active","firstDay","getDay","currentWeekIndex","getDate","day","includes","setDate","length"],"sources":["C:\\Users\\SSAFY\\Desktop\\test_vue\\test_project\\src\\components\\HalfYearStreak.vue"],"sourcesContent":["<template>\r\n  <div class=\"streak-container\">\r\n    <div class=\"title\">스트릭</div>\r\n    <div class=\"grid-container\">\r\n      <div class=\"day-labels\">\r\n        <div class=\"day-label\" v-for=\"(day, index) in days\" :key=\"index\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"months-container\">\r\n        <div v-for=\"(month, monthIndex) in filteredMonths\" :key=\"monthIndex\" class=\"month\">\r\n          <div class=\"month-label\">{{ month.year }} {{ month.name }}</div>\r\n          <div class=\"weeks\">\r\n            <div v-for=\"(week, weekIndex) in month.weeks\" :key=\"weekIndex\" class=\"week\">\r\n              <div\r\n                v-for=\"(day, dayIndex) in week\"\r\n                :key=\"dayIndex\"\r\n                :class=\"['day', { active: day.active }]\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"StreakChart\",\r\n  props: {\r\n    activeDates: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      days: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n      months: this.generateMonths(),\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMonths() {\r\n      // Return the last 6 months from the data\r\n      return this.months.slice(-6);\r\n    },\r\n  },\r\n  methods: {\r\n    generateMonths() {\r\n      const months = [];\r\n      const today = new Date();\r\n      for (let i = 5; i >= 0; i--) {\r\n        const date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n        months.push(this.generateMonthData(date));\r\n      }\r\n      return months;\r\n    },\r\n    generateMonthData(date) {\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth();\r\n      const monthName = date.toLocaleString('default', { month: 'long' });\r\n      const weeks = this.generateWeeks(year, month);\r\n      return { year, name: monthName, weeks };\r\n    },\r\n    generateWeeks(year, month) {\r\n      const weeks = [];\r\n      let week = new Array(7).fill({ active: false });\r\n      const date = new Date(year, month, 1);\r\n      const firstDay = date.getDay();\r\n      let currentWeekIndex = 0;\r\n\r\n      for (let i = 0; i < firstDay; i++) {\r\n        week[i] = { active: false };\r\n      }\r\n\r\n      while (date.getMonth() === month) {\r\n        if (date.getDay() === 0 && date.getDate() !== 1) {\r\n          weeks.push(week);\r\n          week = new Array(7).fill({ active: false });\r\n        }\r\n        const day = date.getDate();\r\n        const active = this.activeDates.includes(`${year}-${month + 1}-${day}`);\r\n        week[date.getDay()] = { active };\r\n        date.setDate(day + 1);\r\n      }\r\n      currentWeekIndex++;\r\n      weeks.push(week);\r\n\r\n      while (weeks.length < 6) {\r\n        weeks.push(new Array(7).fill({ active: false }));\r\n      }\r\n\r\n      return weeks;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.streak-container {\r\n  width: 644px;\r\n  height: 200px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.title {\r\n  font-size: 16px;\r\n  color: #a0a0a0;\r\n  margin-bottom: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.grid-container {\r\n  display: flex;\r\n  overflow-x: auto;\r\n  height: calc(100% - 30px);\r\n}\r\n\r\n.day-labels {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 10px;\r\n}\r\n\r\n.day-label {\r\n  font-size: 14px;\r\n  color: #4a4a4a;\r\n  width: 20px;\r\n  height: 20px;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.months-container {\r\n  display: flex;\r\n}\r\n\r\n.month {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 20px;\r\n}\r\n\r\n.month-label {\r\n  text-align: center;\r\n  font-size: 12px;\r\n  color: #888;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.weeks {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.week {\r\n  display: flex;\r\n}\r\n\r\n.day {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 2px;\r\n  margin: 1px;\r\n}\r\n\r\n.day.active {\r\n  background-color: #4a90e2;\r\n}\r\n</style>"],"mappings":";AA0BA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACzCC,MAAM,EAAE,IAAI,CAACC,cAAc,CAAC;IAC9B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf;MACA,OAAO,IAAI,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACPJ,cAAcA,CAAA,EAAG;MACf,MAAMD,MAAK,GAAI,EAAE;MACjB,MAAMM,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;MACxB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAMC,IAAG,GAAI,IAAIF,IAAI,CAACD,KAAK,CAACI,WAAW,CAAC,CAAC,EAAEJ,KAAK,CAACK,QAAQ,CAAC,IAAIH,CAAC,EAAE,CAAC,CAAC;QACnER,MAAM,CAACY,IAAI,CAAC,IAAI,CAACC,iBAAiB,CAACJ,IAAI,CAAC,CAAC;MAC3C;MACA,OAAOT,MAAM;IACf,CAAC;IACDa,iBAAiBA,CAACJ,IAAI,EAAE;MACtB,MAAMK,IAAG,GAAIL,IAAI,CAACC,WAAW,CAAC,CAAC;MAC/B,MAAMK,KAAI,GAAIN,IAAI,CAACE,QAAQ,CAAC,CAAC;MAC7B,MAAMK,SAAQ,GAAIP,IAAI,CAACQ,cAAc,CAAC,SAAS,EAAE;QAAEF,KAAK,EAAE;MAAO,CAAC,CAAC;MACnE,MAAMG,KAAI,GAAI,IAAI,CAACC,aAAa,CAACL,IAAI,EAAEC,KAAK,CAAC;MAC7C,OAAO;QAAED,IAAI;QAAEtB,IAAI,EAAEwB,SAAS;QAAEE;MAAM,CAAC;IACzC,CAAC;IACDC,aAAaA,CAACL,IAAI,EAAEC,KAAK,EAAE;MACzB,MAAMG,KAAI,GAAI,EAAE;MAChB,IAAIE,IAAG,GAAI,IAAIxB,KAAK,CAAC,CAAC,CAAC,CAACyB,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;MAC/C,MAAMb,IAAG,GAAI,IAAIF,IAAI,CAACO,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC;MACrC,MAAMQ,QAAO,GAAId,IAAI,CAACe,MAAM,CAAC,CAAC;MAC9B,IAAIC,gBAAe,GAAI,CAAC;MAExB,KAAK,IAAIjB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIe,QAAQ,EAAEf,CAAC,EAAE,EAAE;QACjCY,IAAI,CAACZ,CAAC,IAAI;UAAEc,MAAM,EAAE;QAAM,CAAC;MAC7B;MAEA,OAAOb,IAAI,CAACE,QAAQ,CAAC,MAAMI,KAAK,EAAE;QAChC,IAAIN,IAAI,CAACe,MAAM,CAAC,MAAM,KAAKf,IAAI,CAACiB,OAAO,CAAC,MAAM,CAAC,EAAE;UAC/CR,KAAK,CAACN,IAAI,CAACQ,IAAI,CAAC;UAChBA,IAAG,GAAI,IAAIxB,KAAK,CAAC,CAAC,CAAC,CAACyB,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAM,CAAC,CAAC;QAC7C;QACA,MAAMK,GAAE,GAAIlB,IAAI,CAACiB,OAAO,CAAC,CAAC;QAC1B,MAAMJ,MAAK,GAAI,IAAI,CAAC5B,WAAW,CAACkC,QAAQ,CAAC,GAAGd,IAAI,IAAIC,KAAI,GAAI,CAAC,IAAIY,GAAG,EAAE,CAAC;QACvEP,IAAI,CAACX,IAAI,CAACe,MAAM,CAAC,CAAC,IAAI;UAAEF;QAAO,CAAC;QAChCb,IAAI,CAACoB,OAAO,CAACF,GAAE,GAAI,CAAC,CAAC;MACvB;MACAF,gBAAgB,EAAE;MAClBP,KAAK,CAACN,IAAI,CAACQ,IAAI,CAAC;MAEhB,OAAOF,KAAK,CAACY,MAAK,GAAI,CAAC,EAAE;QACvBZ,KAAK,CAACN,IAAI,CAAC,IAAIhB,KAAK,CAAC,CAAC,CAAC,CAACyB,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MAClD;MAEA,OAAOJ,KAAK;IACd;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}