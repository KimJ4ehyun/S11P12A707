{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6504bcbb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"timer\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Timer\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($options.formattedTime), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startTimer && $options.startTimer(...args))\n  }, \"시작\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.stopTimer && $options.stopTimer(...args))\n  }, \"일시 정지\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.resetTimer && $options.resetTimer(...args))\n  }, \"시간 저장\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$options","formattedTime","onClick","_cache","args","startTimer","stopTimer","resetTimer"],"sources":["C:\\Users\\SSAFY\\Desktop\\S11P12A707\\Frontend\\top\\src\\components\\TimeCheck.vue"],"sourcesContent":["<template>\r\n  <div class=\"timer\">\r\n    <h2>Timer</h2>\r\n    <p>{{ formattedTime }}</p>\r\n    <button @click=\"startTimer\">시작</button>\r\n    <button @click=\"stopTimer\">일시 정지</button>\r\n    <button @click=\"resetTimer\">시간 저장</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      time: 0,\r\n      timer: null\r\n    };\r\n  },\r\n  computed: {\r\n    formattedTime() {\r\n      const hours = String(Math.floor(this.time / 3600)).padStart(2, '0');\r\n      const minutes = String(Math.floor((this.time % 3600) / 60)).padStart(2, '0');\r\n      const seconds = String(this.time % 60).padStart(2, '0');\r\n      return `${hours}:${minutes}:${seconds}`;\r\n    }\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      if (this.timer === null) {\r\n        this.timer = setInterval(() => {\r\n          this.time++;\r\n        }, 1000);\r\n      }\r\n    },\r\n    stopTimer() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n      this.time = 0;\r\n    },\r\n    resetTimer() {\r\n      this.stopTimer();\r\n      this.time = 0;\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    this.stopTimer();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.timer {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.timer h2 {\r\n  color: #b0bec5;\r\n  font-weight: 700;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.timer p {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  margin: 20px 0;\r\n}\r\n\r\n.timer button {\r\n  margin: 5px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f0f0f0;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.timer button:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAAc,YAAV,OAAK;;uBADXC,mBAAA,CAMM,OANNC,UAMM,GALJC,UAAc,EACdH,mBAAA,CAA0B,WAAAI,gBAAA,CAApBC,QAAA,CAAAC,aAAa,kBACnBN,mBAAA,CAAuC;IAA9BO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,UAAA,IAAAL,QAAA,CAAAK,UAAA,IAAAD,IAAA,CAAU;KAAE,IAAE,GAC9BT,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAM,SAAA,IAAAN,QAAA,CAAAM,SAAA,IAAAF,IAAA,CAAS;KAAE,OAAK,GAChCT,mBAAA,CAA0C;IAAjCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAO,UAAA,IAAAP,QAAA,CAAAO,UAAA,IAAAH,IAAA,CAAU;KAAE,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}